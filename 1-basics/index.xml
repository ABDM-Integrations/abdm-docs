<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on ABDM Sandbox Documentation</title><link>http://kiranma72.github.io/abdm-docs/1-basics/</link><description>Recent content in Getting Started on ABDM Sandbox Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 07 May 2022 17:53:25 +0530</lastBuildDate><atom:link href="http://kiranma72.github.io/abdm-docs/1-basics/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding the PHR Framework</title><link>http://kiranma72.github.io/abdm-docs/1-basics/phr_architecture_overview/</link><pubDate>Sat, 07 May 2022 18:00:04 +0530</pubDate><guid>http://kiranma72.github.io/abdm-docs/1-basics/phr_architecture_overview/</guid><description>ABDM uses a federated architecture to help users collect their health records across various healthcare providers, view their records from any PHR application and share their records with any requestor with their consent
The image below shows the various entities/roles involved in the PHR framework
What is a Health Information Provider (HIP)? Any entity that agrees to share digital health records with their users using the ABDM specified methods is called an HIP (Health Information Provider).</description></item><item><title>Sign up to the ABDM Sandbox</title><link>http://kiranma72.github.io/abdm-docs/1-basics/sandbox_signup_page/</link><pubDate>Sat, 07 May 2022 18:00:04 +0530</pubDate><guid>http://kiranma72.github.io/abdm-docs/1-basics/sandbox_signup_page/</guid><description>Sign up for the ABDM Sandbox The building blocks of ABDM uses a JWT token based auth mechanism for all API requests. Signing up to the ABDM sandbox provides you a client ID / client secret which can be used to generate the authorization token.
The ABDM sandbox is open to everyone including induviduals. You use the sandbox environment to integrate your application and make sure it is compliant to the ABDM requirements.</description></item><item><title>Making your app ABDM compliant</title><link>http://kiranma72.github.io/abdm-docs/1-basics/integrators_section/</link><pubDate>Sat, 07 May 2022 18:00:04 +0530</pubDate><guid>http://kiranma72.github.io/abdm-docs/1-basics/integrators_section/</guid><description>First decide on the roles that your application will play in the ABDM ecosystem
Role Applicable to Example Applications HRP / HIP Any application that holds health records and shares it on demand HIMS, LIMS, Teleconsultation Apps, user uploaded data in PHR apps, Government programs, etc HIU Any application that requires access to user health records HIMS, Teleconsultation Apps, PHR apps, Insurance apps PHR App Consumer applications that want to help users manage their health records &amp;amp; consents PHR Apps For an explaination of the various roles read the PHR Architecture Overview</description></item><item><title>Verify you can access the Sandbox</title><link>http://kiranma72.github.io/abdm-docs/1-basics/sandbox_request_status_page/</link><pubDate>Sat, 07 May 2022 18:00:04 +0530</pubDate><guid>http://kiranma72.github.io/abdm-docs/1-basics/sandbox_request_status_page/</guid><description>Signing up for the ABDM Sandbox Step 1: Once the Sandbox request form is submitted, the user can see the application submitted status by login in with Email id and Password.
https://sandbox.ndhm.gov.in/applications/Home/login
Step 2: On login, Application Submitted status in green color will be displayed and another status in Grey color.
Step 3: Once the application is Approved by the committee, an email will be received by the user stating Client id &amp;amp; Client Secret.</description></item><item><title>Link your Health Facility</title><link>http://kiranma72.github.io/abdm-docs/1-basics/register_and_link_health_facility/</link><pubDate>Sat, 07 May 2022 18:00:04 +0530</pubDate><guid>http://kiranma72.github.io/abdm-docs/1-basics/register_and_link_health_facility/</guid><description>Register the health facility that uses your software and link it to your software endpoint Following article focuses on HMIS/LMIS/HRPs software providers can register the facilities which uses their softwares
All integrators are expected to first ensure their systems work correctly on sandbox before migrating to production.
On-boarding a Facility into a HFR: ABDM will support 2 methods to onboard health facilities
Method 1: Facility Manager registers via HFR Portal Health facility should sign up on the Health Facility Registry and then link the ABDM compatible HRP software it plans to use.</description></item><item><title>Making your App ABDM Compilant</title><link>http://kiranma72.github.io/abdm-docs/1-basics/integrators_overview/</link><pubDate>Sat, 07 May 2022 18:00:04 +0530</pubDate><guid>http://kiranma72.github.io/abdm-docs/1-basics/integrators_overview/</guid><description>The healthcare ecosystem has various types of applications. These include
HMIS / LMIS systems &amp;ndash; Anyone providing a healthcare software to hospitals, labs, clinics, etc Consumer Healthcare applications &amp;ndash; Personal Health record applications, Teleconsultation applications, etc. Anyone building healthcare applications for consumers / patients Government Health apps &amp;ndash; Software providers for goverment programs like RCH, NCD, NIKSHAY, COWIN, etc Each of the above apps can play multiple roles in the ABDM ecosystem depending on their requirement.</description></item><item><title>Working with ABDM APIs</title><link>http://kiranma72.github.io/abdm-docs/1-basics/working_with_abdm_apis/</link><pubDate>Sat, 07 May 2022 18:00:04 +0530</pubDate><guid>http://kiranma72.github.io/abdm-docs/1-basics/working_with_abdm_apis/</guid><description>How ABDM registers and identifies an entity Every organization that registers with ABDM is issued one or more Client IDs
Each Client ID should be used by the organization to register ONE INSTANCE of their ABDM compiliant software
Each instance of the software can hold health records for one or more health facilities
The figure below explains this using e-Hospital as an example
The Authorization Header Almost all ABDM APIs require you to pass the session token obtained via your client ID / secret in the Authorization HTTP Header.</description></item></channel></rss>